{"ast":null,"code":"var _jsxFileName = \"/Users/john/codeclan_work/final_project/full_stack_audio_processing_with_functions/audio_processing/src/components/AudioContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport AudioPlayer from './AudioPlayer';\nimport AudioVisualiser from './AudioVisualiser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AudioContext = ({\n  audioInput\n}) => {\n  _s();\n\n  const audioContextRef = useRef(new (window.AudioContext || window.webkitAudioContext)());\n  const audioContext = audioContextRef.current;\n  const analyser = audioContext.createAnalyser();\n  audioContext.createMediaStreamSource(audioInput);\n  return /*#__PURE__*/_jsxDEV(AudioVisualiser, {\n    analyser: analyser\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AudioContext, \"UGdNwH4cktezdR98Xpj2Tne/O0g=\");\n\n_c = AudioContext;\nexport default AudioContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AudioContext\");","map":{"version":3,"sources":["/Users/john/codeclan_work/final_project/full_stack_audio_processing_with_functions/audio_processing/src/components/AudioContext.js"],"names":["React","useRef","AudioPlayer","AudioVisualiser","AudioContext","audioInput","audioContextRef","window","webkitAudioContext","audioContext","current","analyser","createAnalyser","createMediaStreamSource"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA6B,OAA7B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,MAAMC,YAAY,GAAG,CAAE;AAACC,EAAAA;AAAD,CAAF,KAAoB;AAAA;;AAErC,QAAMC,eAAe,GAAGL,MAAM,CAAC,KAAKM,MAAM,CAACH,YAAP,IAAuBG,MAAM,CAACC,kBAAnC,GAAD,CAA9B;AACA,QAAMC,YAAY,GAAGH,eAAe,CAACI,OAArC;AACA,QAAMC,QAAQ,GAAGF,YAAY,CAACG,cAAb,EAAjB;AACJH,EAAAA,YAAY,CAACI,uBAAb,CAAqCR,UAArC;AACI,sBACI,QAAC,eAAD;AAAiB,IAAA,QAAQ,EAAEM;AAA3B;AAAA;AAAA;AAAA;AAAA,UADJ;AAIH,CAVD;;GAAMP,Y;;KAAAA,Y;AAYN,eAAeA,YAAf","sourcesContent":["import React, {useRef}  from 'react';\nimport AudioPlayer from './AudioPlayer';\nimport AudioVisualiser from './AudioVisualiser';\n\nconst AudioContext = ( {audioInput} ) => {\n\n    const audioContextRef = useRef(new (window.AudioContext || window.webkitAudioContext)())\n    const audioContext = audioContextRef.current;\n    const analyser = audioContext.createAnalyser();\naudioContext.createMediaStreamSource(audioInput)\n    return(\n        <AudioVisualiser analyser={analyser}/>\n    )\n\n} \n\nexport default AudioContext"]},"metadata":{},"sourceType":"module"}