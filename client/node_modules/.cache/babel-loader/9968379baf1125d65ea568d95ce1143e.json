{"ast":null,"code":"var _jsxFileName = \"/Users/john/codeclan_work/final_project/full_stack_audio_processing_with_functions/audio_processing/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport AudioAnalyser from './components/AudioAnalyser';\nimport AudioPlayer from './components/AudioPlayer';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [audioInput, setAudioInput] = useState(null);\n  const audioContextRef = useRef(new (window.AudioContext || window.webkitAudioContext)());\n  const audioContext = audioContextRef.current;\n\n  async function getMicrophone() {\n    let micAudio = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: false\n    });\n    const source = audioContext.createMediaStreamSource(audioInput);\n    setAudioInput(micAudio);\n  }\n\n  function stopTracks() {\n    audioInput.getTracks().forEach(track => track.stop());\n    setAudioInput(null);\n  }\n\n  function toggleMicrophone() {\n    if (audioInput) {\n      stopTracks();\n    } else {\n      getMicrophone();\n    }\n  }\n\n  function getAudioTrack(event) {\n    if (audioInput) {\n      stopTracks();\n    } else {\n      setAudioInput(event.target);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleMicrophone,\n        children: audioInput ? 'Stop microphone' : 'Get microphone'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), audioInput ? /*#__PURE__*/_jsxDEV(AudioAnalyser, {\n      audioInput: audioInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(AudioPlayer, {\n      onPlay: getAudioTrack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"8tVqBdi3geJ4CQmbPZv5gsqLn/U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/john/codeclan_work/final_project/full_stack_audio_processing_with_functions/audio_processing/src/App.js"],"names":["React","useState","useRef","AudioAnalyser","AudioPlayer","App","audioInput","setAudioInput","audioContextRef","window","AudioContext","webkitAudioContext","audioContext","current","getMicrophone","micAudio","navigator","mediaDevices","getUserMedia","audio","video","source","createMediaStreamSource","stopTracks","getTracks","forEach","track","stop","toggleMicrophone","getAudioTrack","event","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,QAAsC,OAAtC;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAK,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,IAAD,CAA3C;AACA,QAAMO,eAAe,GAAGN,MAAM,CAAC,KAAKO,MAAM,CAACC,YAAP,IAAuBD,MAAM,CAACE,kBAAnC,GAAD,CAA9B;AACA,QAAMC,YAAY,GAAGJ,eAAe,CAACK,OAArC;;AAGA,iBAAeC,aAAf,GAA+B;AAC7B,QAAIC,QAAQ,GAAG,MAAMC,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CACnB;AACEC,MAAAA,KAAK,EAAE,IADT;AAEEC,MAAAA,KAAK,EAAE;AAFT,KADmB,CAArB;AAMA,UAAMC,MAAM,GAAGT,YAAY,CAACU,uBAAb,CAAqChB,UAArC,CAAf;AACAC,IAAAA,aAAa,CAACQ,QAAD,CAAb;AACD;;AAED,WAASQ,UAAT,GAAsB;AACpBjB,IAAAA,UAAU,CAACkB,SAAX,GAAuBC,OAAvB,CAA+BC,KAAK,IAAIA,KAAK,CAACC,IAAN,EAAxC;AACApB,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD;;AAED,WAASqB,gBAAT,GAA4B;AAC1B,QAAGtB,UAAH,EAAc;AACZiB,MAAAA,UAAU;AACX,KAFD,MAEO;AACLT,MAAAA,aAAa;AACd;AACF;;AAED,WAASe,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAGxB,UAAH,EAAc;AACZiB,MAAAA,UAAU;AACX,KAFD,MAEO;AACLhB,MAAAA,aAAa,CAACuB,KAAK,CAACC,MAAP,CAAb;AACD;AACF;;AAID,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BAEE;AAAQ,QAAA,OAAO,EAAEH,gBAAjB;AAAA,kBACGtB,UAAU,GAAG,iBAAH,GAAuB;AADpC;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YAFF,EASGA,UAAU,gBAAG,QAAC,aAAD;AAAe,MAAA,UAAU,EAAEA;AAA3B;AAAA;AAAA;AAAA;AAAA,YAAH,GAA+C,EAT5D,eAUE,QAAC,WAAD;AAAa,MAAA,MAAM,EAAEuB;AAArB;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAvDQxB,G;;KAAAA,G;AAyDT,eAAeA,GAAf","sourcesContent":["import React, {useState, useRef} from 'react';\nimport AudioAnalyser from './components/AudioAnalyser'\nimport AudioPlayer from './components/AudioPlayer'\nimport './App.css';\n\nfunction App() {\n\n  const[audioInput, setAudioInput] = useState(null);\n  const audioContextRef = useRef(new (window.AudioContext || window.webkitAudioContext)())\n  const audioContext = audioContextRef.current;\n  \n\n  async function getMicrophone() {\n    let micAudio = await navigator.mediaDevices.getUserMedia(\n      {\n        audio: true,\n        video: false\n      }\n    )\n    const source = audioContext.createMediaStreamSource(audioInput)\n    setAudioInput(micAudio);\n  }\n\n  function stopTracks() {\n    audioInput.getTracks().forEach(track => track.stop());\n    setAudioInput(null);\n  }\n\n  function toggleMicrophone() {\n    if(audioInput){\n      stopTracks();\n    } else {\n      getMicrophone();\n    }\n  }\n\n  function getAudioTrack(event) {\n    if(audioInput){\n      stopTracks();\n    } else {\n      setAudioInput(event.target);\n    }\n  }\n\n  \n\n  return (\n    <div className=\"App\">\n      \n      <div className=\"controls\">\n        \n        <button onClick={toggleMicrophone}>\n          {audioInput ? 'Stop microphone' : 'Get microphone'}\n        </button>\n\n      </div>\n      {audioInput ? <AudioAnalyser audioInput={audioInput} /> : \"\"}\n      <AudioPlayer onPlay={getAudioTrack}></AudioPlayer>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}