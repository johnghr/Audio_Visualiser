{"ast":null,"code":"var _jsxFileName = \"/Users/john/codeclan_work/final_project/full_stack_audio_processing_with_functions/audio_processing/client/src/components/TrackForm/UploadForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseUrl = 'http://localhost:5000/upload';\n\nconst UploadForm = ({\n  addUpload\n}) => {\n  _s();\n\n  const [file, setFile] = useState();\n  const [uploadedFile, setUploadedFile] = useState({});\n\n  const onChange = e => {\n    console.log(\"event target:\", e.target);\n    setFile({\n      file: e.target.files[0],\n      name: e.target.name\n    });\n    console.log(\"file set to:\", file.file, \"fileName set to:\", file.fileName);\n  };\n\n  const onSubmit = async e => {\n    console.log(\"stop hitting me\");\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n    console.log(\"here be form data\", formData);\n\n    try {\n      const res = await fetch(baseUrl, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        body: formData\n      });\n      console.log(\"fetch sent\");\n      const {\n        fileName,\n        filePath\n      } = res.formData;\n      setUploadedFile({\n        fileName,\n        filePath\n      });\n      console.log(\"uploaded file:\", uploadedFile);\n    } catch (err) {\n      if (err.response.status === 500) {\n        console.log('There was a problem with the server');\n      } else {\n        console.log(err.response.data.msg);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      action: \"/upload\",\n      encType: \"multipart/form-data\",\n      methods: \"POST\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onChange,\n        type: \"file\",\n        name: \"track\",\n        id: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this), uploadedFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: file.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UploadForm, \"4Q/Ldpq33nVV1/T90vheTiAjFLc=\");\n\n_c = UploadForm;\nexport default UploadForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"sources":["/Users/john/codeclan_work/final_project/full_stack_audio_processing_with_functions/audio_processing/client/src/components/TrackForm/UploadForm.jsx"],"names":["React","useState","baseUrl","UploadForm","addUpload","file","setFile","uploadedFile","setUploadedFile","onChange","e","console","log","target","files","name","fileName","onSubmit","preventDefault","formData","FormData","append","res","fetch","headers","body","filePath","err","response","status","data","msg"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n\nconst baseUrl = 'http://localhost:5000/upload';\n\nconst UploadForm = ({addUpload}) => {\n\n    const [file, setFile] = useState()\n    const [uploadedFile, setUploadedFile] = useState({})\n\n    \n    const onChange = e => {\n        console.log(\"event target:\", e.target)\n        setFile({\n            file: e.target.files[0],\n            name: e.target.name\n        });\n        console.log(\"file set to:\",file.file, \n                    \"fileName set to:\",file.fileName)\n    }\n\n    const onSubmit = async e => {\n        console.log(\"stop hitting me\")\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('file', file)\n        console.log(\"here be form data\",formData)\n        \n        try {\n\n            const res = await fetch(baseUrl, formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                },\n                body: formData\n            })\n\n            console.log(\"fetch sent\")\n            const { fileName, filePath} = res.formData;\n            setUploadedFile({ fileName, filePath });\n            console.log(\"uploaded file:\", uploadedFile)\n\n        } catch(err) {\n            \n            if(err.response.status === 500) {\n                console.log('There was a problem with the server')\n            } else {\n                console.log(err.response.data.msg)\n            }  \n\n        }\n    }\n\n    return(\n        <div>\n           <form onSubmit={onSubmit} action=\"/upload\" encType=\"multipart/form-data\" methods=\"POST\">\n                <input onChange={onChange} type=\"file\" name=\"track\" id=\"\" />\n                <input type=\"submit\" value=\"Upload\"/>\n            </form> \n            {uploadedFile ? <div>\n                <h3>{file.name}</h3>\n            </div> : null}\n        </div>\n    \n    )\n\n}\n\nexport default UploadForm;"]},"metadata":{},"sourceType":"module"}