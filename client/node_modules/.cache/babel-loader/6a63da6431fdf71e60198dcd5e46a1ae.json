{"ast":null,"code":"var _jsxFileName = \"/Users/john/codeclan_work/final_project/full_stack_audio_processing_with_functions/audio_processing/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport AudioContext from './components/AudioContext';\nimport AudioPlayer from './components/AudioPlayer';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [audio, setaudio] = useState(null); // const[audioInput, setAudioInput] = useState(null);\n\n  async function getMicrophone() {\n    let micAudio = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: false\n    }); // setAudioInput(micAudio);\n\n    setaudio(audioContext.createMediaStreamSource(micAudio));\n  }\n\n  function stopMicrophone() {\n    audio.getTracks().forEach(track => track.stop());\n    setaudio(null);\n  }\n\n  function toggleMicrophone() {\n    if (audio) {\n      stopMicrophone();\n    } else {\n      getMicrophone();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleMicrophone,\n        children: audio ? 'Stop microphone' : 'Get microphone'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), audio ? /*#__PURE__*/_jsxDEV(AudioContext, {\n      audio: audio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(AudioPlayer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2zzPrBwG9dxnigmiEUnAk4TaVU0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/john/codeclan_work/final_project/full_stack_audio_processing_with_functions/audio_processing/src/App.js"],"names":["React","useState","useRef","AudioContext","AudioPlayer","App","audio","setaudio","getMicrophone","micAudio","navigator","mediaDevices","getUserMedia","video","audioContext","createMediaStreamSource","stopMicrophone","getTracks","forEach","track","stop","toggleMicrophone"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,QAAsC,OAAtC;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAK,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAjC,CAFa,CAGb;;AAGA,iBAAeO,aAAf,GAA+B;AAC7B,QAAIC,QAAQ,GAAG,MAAMC,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CACnB;AACEN,MAAAA,KAAK,EAAE,IADT;AAEEO,MAAAA,KAAK,EAAE;AAFT,KADmB,CAArB,CAD6B,CAO7B;;AACAN,IAAAA,QAAQ,CAACO,YAAY,CAACC,uBAAb,CAAqCN,QAArC,CAAD,CAAR;AACD;;AAED,WAASO,cAAT,GAA0B;AACxBV,IAAAA,KAAK,CAACW,SAAN,GAAkBC,OAAlB,CAA0BC,KAAK,IAAIA,KAAK,CAACC,IAAN,EAAnC;AACAb,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;;AAED,WAASc,gBAAT,GAA4B;AAC1B,QAAGf,KAAH,EAAS;AACPU,MAAAA,cAAc;AACf,KAFD,MAEO;AACLR,MAAAA,aAAa;AACd;AACF;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BAEE;AAAQ,QAAA,OAAO,EAAEa,gBAAjB;AAAA,kBACGf,KAAK,GAAG,iBAAH,GAAuB;AAD/B;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YAFF,EASGA,KAAK,gBAAG,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,YAAH,GAAoC,EAT5C,eAUE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA5CQD,G;;KAAAA,G;AA8CT,eAAeA,GAAf","sourcesContent":["import React, {useState, useRef} from 'react';\nimport AudioContext from './components/AudioContext'\nimport AudioPlayer from './components/AudioPlayer'\nimport './App.css';\n\nfunction App() {\n\n  const[audio, setaudio] = useState(null);\n  // const[audioInput, setAudioInput] = useState(null);\n  \n\n  async function getMicrophone() {\n    let micAudio = await navigator.mediaDevices.getUserMedia(\n      {\n        audio: true,\n        video: false\n      }\n    )\n    // setAudioInput(micAudio);\n    setaudio(audioContext.createMediaStreamSource(micAudio));\n  }\n\n  function stopMicrophone() {\n    audio.getTracks().forEach(track => track.stop());\n    setaudio(null);\n  }\n\n  function toggleMicrophone() {\n    if(audio){\n      stopMicrophone();\n    } else {\n      getMicrophone();\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      \n      <div className=\"controls\">\n        \n        <button onClick={toggleMicrophone}>\n          {audio ? 'Stop microphone' : 'Get microphone'}\n        </button>\n\n      </div>\n      {audio ? <AudioContext audio={audio} /> : \"\"}\n      <AudioPlayer></AudioPlayer>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}