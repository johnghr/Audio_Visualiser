{"ast":null,"code":"var _jsxFileName = \"/Users/john/codeclan_work/final_project/full_stack_audio_processing_with_functions/audio_processing/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport MediaPlayer from './containers/MediaPlayer';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { getUploads } from './services/TrackService';\nimport UploadForm from './components/TrackForm/UploadForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    fetch('http:localhost:5000').then(res => res.json()).then(data => setMessage(data.message));\n  }, []);\n  const [tracks, setTracks] = useState([]);\n  useEffect(() => {\n    getUploads().then(allUploads => {\n      setTracks(allUploads);\n    });\n  }, []);\n\n  const addUpload = upload => {\n    const temp = tracks.map(t => t);\n    temp.push(upload);\n    setTracks(temp);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MediaPlayer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UploadForm, {\n      addUpload: addUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"The message is: \", message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ggOG+q72WsjXgrmkMB5IDROkl44=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/john/codeclan_work/final_project/full_stack_audio_processing_with_functions/audio_processing/client/src/App.js"],"names":["MediaPlayer","React","useEffect","useState","getUploads","UploadForm","App","message","setMessage","fetch","then","res","json","data","tracks","setTracks","allUploads","addUpload","upload","temp","map","t","push"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,0BAAxB;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,WAAP;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,UAAP,MAAuB,mCAAvB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CAAC,qBAAD,CAAL,CAECC,IAFD,CAEMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAFb,EAGCF,IAHD,CAGMG,IAAI,IAAIL,UAAU,CAACK,IAAI,CAACN,OAAN,CAHxB;AAKD,GANQ,EAMN,EANM,CAAT;AAQA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,UAAU,GAAGM,IAAb,CAAmBM,UAAD,IAAgB;AAChCD,MAAAA,SAAS,CAACC,UAAD,CAAT;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,SAAS,GAAIC,MAAD,IAAY;AAC5B,UAAMC,IAAI,GAAGL,MAAM,CAACM,GAAP,CAAYC,CAAC,IAAIA,CAAjB,CAAb;AACAF,IAAAA,IAAI,CAACG,IAAL,CAAUJ,MAAV;AACAH,IAAAA,SAAS,CAACI,IAAD,CAAT;AACD,GAJD;;AAMA,sBACE;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAY,MAAA,SAAS,EAAEF;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,qCAAoBV,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAjCQD,G;;KAAAA,G;AAmCT,eAAeA,GAAf","sourcesContent":["import MediaPlayer from './containers/MediaPlayer';\nimport React, {useEffect, useState} from 'react';\nimport './App.css';\nimport { getUploads } from './services/TrackService';\nimport UploadForm from './components/TrackForm/UploadForm'\n\n\nfunction App() {\n \n  const [message, setMessage] = useState('')\n\n  useEffect(() => {\n    fetch('http:localhost:5000',\n    )\n    .then(res => res.json())\n    .then(data => setMessage(data.message))\n  \n  }, [])\n\n  const [tracks, setTracks] = useState([]);\n\n  useEffect(() => {\n    getUploads().then((allUploads) => {\n      setTracks(allUploads)\n    })\n  }, [])\n\n  const addUpload = (upload) => {\n    const temp = tracks.map( t => t);\n    temp.push(upload)\n    setTracks(temp)\n  }\n\n  return (\n    <div>\n      <MediaPlayer></MediaPlayer>\n      <UploadForm addUpload={addUpload}></UploadForm>\n      <p>The message is: {message}</p>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}