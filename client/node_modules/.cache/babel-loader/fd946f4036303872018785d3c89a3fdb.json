{"ast":null,"code":"var _jsxFileName = \"/Users/john/codeclan_work/final_project/full_stack_audio_processing_with_functions/audio_processing/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MicAudioAnalyser from './components/MicAudioAnalyser';\nimport AudioPlayer from './components/AudioPlayer';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [microphoneInput, setMicrophoneInput] = useState(null);\n  const [trackInput, setTrackInput] = useState(null);\n\n  async function getMicrophone() {\n    let micAudio = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: false\n    });\n    setMicrophoneInput(micAudio);\n  }\n\n  function getAudioTrack(event) {\n    if (trackInput) {\n      stopTrack();\n    } else {\n      setTrackInput(event.target);\n    }\n  }\n\n  function stopMicrophone() {\n    microphoneInput.getTracks().forEach(track => track.stop());\n    setMicrophoneInput(null);\n  }\n\n  function stopTrack() {\n    trackInput.getTracks().forEach(track => track.stop());\n    setTrackInput(null);\n  }\n\n  function toggleMicrophone() {\n    if (microphoneInput) {\n      stopMicrophone();\n    } else {\n      getMicrophone();\n    }\n  }\n\n  function toggleTrack() {\n    if (trackInput) {}\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleMicrophone,\n        children: audioInput ? 'Stop microphone' : 'Get microphone'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), audioInput ? /*#__PURE__*/_jsxDEV(MicAudioAnalyser, {\n      audioInput: audioInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(AudioPlayer, {\n      onPlay: toggleTrack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"F8IWBzF2xCgCEZ4A8+5wzPKjQ7o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/john/codeclan_work/final_project/full_stack_audio_processing_with_functions/audio_processing/src/App.js"],"names":["React","useState","MicAudioAnalyser","AudioPlayer","App","microphoneInput","setMicrophoneInput","trackInput","setTrackInput","getMicrophone","micAudio","navigator","mediaDevices","getUserMedia","audio","video","getAudioTrack","event","stopTrack","target","stopMicrophone","getTracks","forEach","track","stop","toggleMicrophone","toggleTrack","audioInput"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAK,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,QAAQ,CAAC,IAAD,CAArD;AACA,QAAK,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,IAAD,CAA3C;;AAGA,iBAAeQ,aAAf,GAA+B;AAC7B,QAAIC,QAAQ,GAAG,MAAMC,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CACnB;AACEC,MAAAA,KAAK,EAAE,IADT;AAEEC,MAAAA,KAAK,EAAE;AAFT,KADmB,CAArB;AAMAT,IAAAA,kBAAkB,CAACI,QAAD,CAAlB;AACD;;AAED,WAASM,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAGV,UAAH,EAAc;AACZW,MAAAA,SAAS;AACV,KAFD,MAEO;AACLV,MAAAA,aAAa,CAACS,KAAK,CAACE,MAAP,CAAb;AACD;AACF;;AAED,WAASC,cAAT,GAA0B;AACxBf,IAAAA,eAAe,CAACgB,SAAhB,GAA4BC,OAA5B,CAAoCC,KAAK,IAAIA,KAAK,CAACC,IAAN,EAA7C;AACAlB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;;AAED,WAASY,SAAT,GAAqB;AACnBX,IAAAA,UAAU,CAACc,SAAX,GAAuBC,OAAvB,CAA+BC,KAAK,IAAIA,KAAK,CAACC,IAAN,EAAxC;AACAhB,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD;;AAED,WAASiB,gBAAT,GAA4B;AAC1B,QAAIpB,eAAJ,EAAoB;AAClBe,MAAAA,cAAc;AACf,KAFD,MAEO;AACLX,MAAAA,aAAa;AACd;AACF;;AAED,WAASiB,WAAT,GAAuB;AACrB,QAAInB,UAAJ,EAAe,CAEd;AACF;;AAKD,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BAEE;AAAQ,QAAA,OAAO,EAAEkB,gBAAjB;AAAA,kBACGE,UAAU,GAAG,iBAAH,GAAuB;AADpC;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YAFF,EASGA,UAAU,gBAAG,QAAC,gBAAD;AAAkB,MAAA,UAAU,EAAEA;AAA9B;AAAA;AAAA;AAAA;AAAA,YAAH,GAAkD,EAT/D,eAUE,QAAC,WAAD;AAAa,MAAA,MAAM,EAAED;AAArB;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAjEQtB,G;;KAAAA,G;AAmET,eAAeA,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport MicAudioAnalyser from './components/MicAudioAnalyser'\nimport AudioPlayer from './components/AudioPlayer'\nimport './App.css';\n\nfunction App() {\n\n  const[microphoneInput, setMicrophoneInput] = useState(null);\n  const[trackInput, setTrackInput] = useState(null);\n  \n\n  async function getMicrophone() {\n    let micAudio = await navigator.mediaDevices.getUserMedia(\n      {\n        audio: true,\n        video: false\n      }\n    )\n    setMicrophoneInput(micAudio);\n  }\n\n  function getAudioTrack(event) {\n    if(trackInput){\n      stopTrack();\n    } else {\n      setTrackInput(event.target);\n    }\n  }\n\n  function stopMicrophone() {\n    microphoneInput.getTracks().forEach(track => track.stop());\n    setMicrophoneInput(null);\n  }\n\n  function stopTrack() {\n    trackInput.getTracks().forEach(track => track.stop());\n    setTrackInput(null);\n  }\n\n  function toggleMicrophone() {\n    if (microphoneInput){\n      stopMicrophone();\n    } else {\n      getMicrophone();\n    }\n  }\n\n  function toggleTrack() {\n    if (trackInput){\n      \n    }\n  }\n  \n\n  \n\n  return (\n    <div className=\"App\">\n      \n      <div className=\"controls\">\n        \n        <button onClick={toggleMicrophone}>\n          {audioInput ? 'Stop microphone' : 'Get microphone'}\n        </button>\n\n      </div>\n      {audioInput ? <MicAudioAnalyser audioInput={audioInput} /> : \"\"}\n      <AudioPlayer onPlay={toggleTrack}></AudioPlayer>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}